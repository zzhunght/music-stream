

upstream go-api {
    # golang_app là tên services trong docker compose
    server golang_app:8080;
}

upstream authentication {
    server authentication_services:3001;
}

server {

    listen 80;
    # Add CORS headers for all routes
       
    location ^~ /api/v1/user {
        location ^~ /api/v1/user/playlists {
            include authentication.conf;
            proxy_pass http://go-api;
        }
        location ^~ /api/v1/user/info {
            include authentication.conf;
            proxy_pass http://go-api;
        }
        location ^~ /api/v1/user/follow {
            include authentication.conf;
            proxy_pass http://go-api;
        }
        proxy_pass http://go-api;
    }
    location = /api/v1/health-check {
        proxy_pass http://go-api;
    }

    location ^~ /api/v1/admin {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' "Origin, X-Requested-With, Content-Type, Accept" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        include authentication.conf;
        proxy_pass http://go-api;
    }

    location ^~ /api/v1/public {
        proxy_pass http://go-api;
    }

    location /auth {
        internal;
        proxy_pass_request_body off;
        proxy_pass_request_headers on;
        proxy_pass http://authentication;
        
    }
    


    location  @authentication_error {
        default_type application/json;
        return 401 '{"error": "$auth_error_message"}';
    }
}