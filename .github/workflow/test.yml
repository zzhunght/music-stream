name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5434:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: music123
          POSTGRES_DB: music_app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: music
          RABBITMQ_DEFAULT_PASS: music123

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker images
      run: |
        cd server
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml up -d

    - name: Run tests
      run: |
        cd server
        # Add commands to run your tests here
        # Example for Golang:
        docker-compose exec go-be go test ./...
        # Example for Node.js:
        docker-compose exec notification_services npm test

    - name: Teardown
      run: |
        cd server
        docker-compose down
